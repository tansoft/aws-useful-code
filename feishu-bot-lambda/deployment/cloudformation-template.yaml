AWSTemplateFormatVersion: '2010-09-09'
Description: '飞书机器人系统 - 无服务器架构部署模板'

Parameters:
  ProjectName:
    Type: String
    Default: feishu-bot
    Description: 项目名称，用于资源命名
    
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, staging, prod]
    Description: 部署环境
    
  FeishuAppId:
    Type: String
    Description: 飞书应用ID
    NoEcho: true
    
  FeishuAppSecret:
    Type: String
    Description: 飞书应用密钥
    NoEcho: true
    
  FeishuVerificationToken:
    Type: String
    Description: 飞书验证Token
    NoEcho: true
    
  FeishuEncryptKey:
    Type: String
    Description: 飞书加密密钥
    NoEcho: true
    
  FeishuBotName:
    Type: String
    Default: FeishuBot
    Description: 机器人名称
    
  FeishuAlertChatIds:
    Type: String
    Default: ""
    Description: 告警通知群聊ID列表（逗号分隔）
    
  LogLevel:
    Type: String
    Default: INFO
    AllowedValues: [DEBUG, INFO, WARNING, ERROR]
    Description: 日志级别

Globals:
  Function:
    Runtime: python3.9
    Timeout: 30
    MemorySize: 256
    Environment:
      Variables:
        LOG_LEVEL: !Ref LogLevel
        ENVIRONMENT: !Ref Environment
        PROJECT_NAME: !Ref ProjectName

Resources:
  # ========== Parameter Store 参数 ==========
  FeishuAppIdParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub '/${ProjectName}/${Environment}/feishu/app_id'
      Type: String
      Value: !Ref FeishuAppId
      Description: 飞书应用ID
      
  FeishuAppSecretParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub '/${ProjectName}/${Environment}/feishu/app_secret'
      Type: SecureString
      Value: !Ref FeishuAppSecret
      Description: 飞书应用密钥
      
  FeishuVerificationTokenParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub '/${ProjectName}/${Environment}/feishu/verification_token'
      Type: SecureString
      Value: !Ref FeishuVerificationToken
      Description: 飞书验证Token
      
  FeishuEncryptKeyParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub '/${ProjectName}/${Environment}/feishu/encrypt_key'
      Type: SecureString
      Value: !Ref FeishuEncryptKey
      Description: 飞书加密密钥
      
  FeishuBotNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub '/${ProjectName}/${Environment}/feishu/bot_name'
      Type: String
      Value: !Ref FeishuBotName
      Description: 机器人名称
      
  FeishuWebhookUrlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub '/${ProjectName}/${Environment}/feishu/webhook_url'
      Type: String
      Value: !Sub 'https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/webhook'
      Description: Webhook URL
      
  # ========== SQS 队列 ==========
  MessageQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${ProjectName}-${Environment}-messages'
      VisibilityTimeoutSeconds: 300
      MessageRetentionPeriod: 1209600  # 14 days
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt MessageDeadLetterQueue.Arn
        maxReceiveCount: 3
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
          
  MessageDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${ProjectName}-${Environment}-messages-dlq'
      MessageRetentionPeriod: 1209600  # 14 days
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
          
  # ========== IAM 角色 ==========
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-${Environment}-lambda-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: SQSAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sqs:SendMessage
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                Resource:
                  - !GetAtt MessageQueue.Arn
                  - !GetAtt MessageDeadLetterQueue.Arn
        - PolicyName: ParameterStoreAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                  - ssm:GetParametersByPath
                Resource:
                  - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${ProjectName}/${Environment}/*'
        - PolicyName: CloudWatchLogs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
          
  # ========== Lambda 函数 ==========
  ReceiveLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-receive'
      Runtime: python3.9
      Handler: src.lambdas.receive_handler.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          # Placeholder code - will be replaced during deployment
          def lambda_handler(event, context):
              return {'statusCode': 200, 'body': 'Placeholder'}
      Timeout: 30
      MemorySize: 256
      Environment:
        Variables:
          LOG_LEVEL: !Ref LogLevel
          ENVIRONMENT: !Ref Environment
          PROJECT_NAME: !Ref ProjectName
          SQS_QUEUE_URL: !Ref MessageQueue
          PARAMETER_STORE_PREFIX: !Sub '/${ProjectName}/${Environment}/feishu'
          FEISHU_ENCRYPT_KEY: !Ref FeishuEncryptKey
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
          
  ProcessLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-process'
      Runtime: python3.9
      Handler: src.lambdas.process_handler.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          # Placeholder code - will be replaced during deployment
          def lambda_handler(event, context):
              return {'statusCode': 200, 'body': 'Placeholder'}
      Timeout: 300
      MemorySize: 512
      Environment:
        Variables:
          LOG_LEVEL: !Ref LogLevel
          ENVIRONMENT: !Ref Environment
          PROJECT_NAME: !Ref ProjectName
          PARAMETER_STORE_PREFIX: !Sub '/${ProjectName}/${Environment}/feishu'
          FEISHU_APP_ID: !Ref FeishuAppId
          FEISHU_APP_SECRET: !Ref FeishuAppSecret
          FEISHU_VERIFICATION_TOKEN: !Ref FeishuVerificationToken
          FEISHU_ENCRYPT_KEY: !Ref FeishuEncryptKey
          FEISHU_BOT_NAME: !Ref FeishuBotName
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
          
  MonitorLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-monitor'
      Runtime: python3.9
      Handler: src.lambdas.monitor_handler.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          # Placeholder code - will be replaced during deployment
          def lambda_handler(event, context):
              return {'statusCode': 200, 'body': 'Placeholder'}
      Timeout: 60
      MemorySize: 256
      Environment:
        Variables:
          LOG_LEVEL: !Ref LogLevel
          ENVIRONMENT: !Ref Environment
          PROJECT_NAME: !Ref ProjectName
          PARAMETER_STORE_PREFIX: !Sub '/${ProjectName}/${Environment}/feishu'
          FEISHU_APP_ID: !Ref FeishuAppId
          FEISHU_APP_SECRET: !Ref FeishuAppSecret
          FEISHU_VERIFICATION_TOKEN: !Ref FeishuVerificationToken
          FEISHU_ENCRYPT_KEY: !Ref FeishuEncryptKey
          FEISHU_BOT_NAME: !Ref FeishuBotName
          FEISHU_ALERT_CHAT_IDS: !Ref FeishuAlertChatIds
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
          
  # ========== SQS 触发器 ==========
  ProcessLambdaEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn: !GetAtt MessageQueue.Arn
      FunctionName: !Ref ProcessLambda
      BatchSize: 10
      MaximumBatchingWindowInSeconds: 5
      
  # ========== API Gateway ==========
  ApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub '${ProjectName}-${Environment}-api'
      Description: 飞书机器人API Gateway
      EndpointConfiguration:
        Types:
          - REGIONAL
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
          
  ApiGatewayResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref ApiGateway
      ParentId: !GetAtt ApiGateway.RootResourceId
      PathPart: webhook
      
  ApiGatewayMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref ApiGateway
      ResourceId: !Ref ApiGatewayResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ReceiveLambda.Arn}/invocations'
      MethodResponses:
        - StatusCode: 200
        - StatusCode: 400
        - StatusCode: 500
        
  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: ApiGatewayMethod
    Properties:
      RestApiId: !Ref ApiGateway
      StageName: !Ref Environment
      StageDescription: !Sub '${Environment} stage for ${ProjectName}'
      
  # ========== Lambda 权限 ==========
  ReceiveLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ReceiveLambda
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGateway}/*/*/*'
      
  # ========== CloudWatch 日志组 ==========
  ReceiveLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ReceiveLambda}'
      RetentionInDays: 14
      
  ProcessLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProcessLambda}'
      RetentionInDays: 14
      
  MonitorLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${MonitorLambda}'
      RetentionInDays: 14
      
  # ========== CloudWatch 告警 ==========
  ReceiveLambdaErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${ProjectName}-${Environment}-receive-lambda-errors'
      AlarmDescription: 接收Lambda函数错误告警
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 2
      Threshold: 5
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref ReceiveLambda
      TreatMissingData: notBreaching
      
  ProcessLambdaErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${ProjectName}-${Environment}-process-lambda-errors'
      AlarmDescription: 处理Lambda函数错误告警
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 2
      Threshold: 5
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref ProcessLambda
      TreatMissingData: notBreaching
      
  MessageQueueDepthAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${ProjectName}-${Environment}-message-queue-depth'
      AlarmDescription: SQS队列深度告警
      MetricName: ApproximateNumberOfVisibleMessages
      Namespace: AWS/SQS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 100
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: QueueName
          Value: !GetAtt MessageQueue.QueueName
      TreatMissingData: notBreaching

Outputs:
  ApiGatewayUrl:
    Description: API Gateway Webhook URL
    Value: !Sub 'https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/webhook'
    Export:
      Name: !Sub '${ProjectName}-${Environment}-webhook-url'
      
  MessageQueueUrl:
    Description: SQS消息队列URL
    Value: !Ref MessageQueue
    Export:
      Name: !Sub '${ProjectName}-${Environment}-message-queue-url'
      
  MessageQueueArn:
    Description: SQS消息队列ARN
    Value: !GetAtt MessageQueue.Arn
    Export:
      Name: !Sub '${ProjectName}-${Environment}-message-queue-arn'
      
  ReceiveLambdaArn:
    Description: 接收Lambda函数ARN
    Value: !GetAtt ReceiveLambda.Arn
    Export:
      Name: !Sub '${ProjectName}-${Environment}-receive-lambda-arn'
      
  ProcessLambdaArn:
    Description: 处理Lambda函数ARN
    Value: !GetAtt ProcessLambda.Arn
    Export:
      Name: !Sub '${ProjectName}-${Environment}-process-lambda-arn'
      
  MonitorLambdaArn:
    Description: 监控Lambda函数ARN
    Value: !GetAtt MonitorLambda.Arn
    Export:
      Name: !Sub '${ProjectName}-${Environment}-monitor-lambda-arn'
      
  ParameterStorePrefix:
    Description: Parameter Store参数前缀
    Value: !Sub '/${ProjectName}/${Environment}/feishu'
    Export:
      Name: !Sub '${ProjectName}-${Environment}-parameter-prefix'